{"version":3,"sources":["firebase.js","redux/actions/templateActions.js","components/home.jsx","components/login.jsx","components/navbar.jsx","components/preview.jsx","redux/actions/detailsActions.js","components/personalData.jsx","components/publicPreview.jsx","components/qualifications.jsx","redux/actions/saveActions.js","components/signup.jsx","redux/actions/userActions.js","App.js","redux/reducers/templateReducer.js","redux/reducers/userReducer.js","redux/reducers/detailsReducer.js","redux/reducers/saveReducer.js","redux/rootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","templateCreator","code","type","payload","Home","user","useSelector","state","history","useHistory","dispatch","useDispatch","to","className","onClick","push","src","signOut","Login","useState","email","setEmail","password","setPassword","class","for","value","onChange","e","currentTarget","id","preventDefault","signInWithEmailAndPassword","Navbar","Preview","props","details","fname","lname","city","phone","cgpa","college","degree","year","templateCode","template","detailCreator","PersonalData","placeholder","PublicPreview","rid","useParams","previewData","setPreviewData","useEffect","collection","doc","get","then","data","isPublic","Qualifications","saveState","uid","checked","alert","add","docRef","catch","err","saveErrCreator","saveResume","SignUp","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword","userCreator","App","unsub","onAuthStateChanged","a","exists","set","path","templateReducer","action","userReducer","initialState","detailsReducer","loading","rootReducer","combineReducers","myStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"oSAaAA,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YChBrBC,EAAkB,SAACC,GAC9B,MAAO,CACLC,KAAM,eACNC,QAASF,I,eC6CEG,EA1CJ,WACT,IAAIC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACpCG,EAAUC,cACVC,EAAWC,cACf,OACE,qCACGN,EAAO,GAAK,cAAC,IAAD,CAAUO,GAAG,WAE1B,sBAAKC,UAAU,qBAAf,UACE,qBACEC,QAAS,WACPJ,EAASV,EAAgB,MACzBQ,EAAQO,KAAK,cAEfF,UAAU,WALZ,SAOE,qBAAKG,IAAI,sCAEX,qBACEF,QAAS,WACPJ,EAASV,EAAgB,MACzBQ,EAAQO,KAAK,cAEfF,UAAU,WALZ,SAOE,qBAAKG,IAAI,yCAIb,wBACEH,UAAU,8BACVC,QAAS,WAEPhB,EAAKmB,WAJT,wB,QCuCSC,EArEH,WACV,IAAIV,EAAUC,cACVJ,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACxC,EAAwBc,mBAAS,IAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAA8BF,mBAAS,IAAvC,mBAAKG,EAAL,KAAeC,EAAf,KAEA,OACE,4LAEGlB,EAAO,cAAC,IAAD,CAAUO,GAAG,UAAa,GAClC,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,YAAd,mBACA,uBAAMA,UAAU,OAAhB,UACE,sBAAKW,MAAM,OAAX,UACE,uBAAOC,IAAI,qBAAqBD,MAAM,aAAtC,2BAGA,uBACEtB,KAAK,QACLwB,MAAON,EACPO,SAAU,SAACC,GACTP,EAASO,EAAEC,cAAcH,QAE3BF,MAAM,eACNM,GAAG,0BAGP,sBAAKN,MAAM,OAAX,UACE,uBAAOC,IAAI,wBAAwBD,MAAM,aAAzC,sBAGA,uBACEtB,KAAK,WACLsB,MAAM,eACNE,MAAOJ,EACPK,SAAU,SAACC,GACTL,EAAYK,EAAEC,cAAcH,QAE9BI,GAAG,6BAIP,wBACEhB,QAAS,SAACc,GACRA,EAAEG,iBACFjC,EAAKkC,2BAA2BZ,EAAOE,IAEzCE,MAAM,kBALR,mBASA,uBACA,uBACA,wBACEV,QAAS,WACPN,EAAQO,KAAK,YAEfS,MAAM,kBAJR,iCC3CGS,EAdF,WACX,OACE,mCACE,qBAAKT,MAAM,6BAAX,SACE,qBAAKA,MAAM,kBAAX,SACE,cAAC,IAAD,CAAMA,MAAM,eAAeZ,GAAG,IAA9B,mCCmBKsB,G,MAvBD,SAACC,GACb,MACE7B,aAAY,SAACC,GAAD,OAAWA,EAAM6B,WADzBC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,KAAMhC,EAA1B,EAA0BA,MAAOa,EAAjC,EAAiCA,MAAOoB,EAAxC,EAAwCA,MAAOC,EAA/C,EAA+CA,KAAMC,EAArD,EAAqDA,QAASC,EAA9D,EAA8DA,OAAQC,EAAtE,EAAsEA,KAGlEC,EAAevC,aAAY,SAACC,GAAD,OAAWA,EAAMuC,YAChD,OACE,mCACE,sBAAKjC,UAAU,oBAAf,UACE,mBAAGA,UAAS,mBAAcgC,GAA1B,SAA2CR,IAC3C,mBAAGxB,UAAS,mBAAcgC,GAA1B,SAA2CP,IAC3C,mBAAGzB,UAAS,mBAAcgC,GAA1B,SAA2CzB,IAC3C,mBAAGP,UAAS,mBAAcgC,GAA1B,SAA2CL,IAC3C,mBAAG3B,UAAS,mBAAcgC,GAA1B,SAA2CN,IAC3C,mBAAG1B,UAAS,mBAAcgC,GAA1B,SAA2CtC,IAC3C,mBAAGM,UAAS,mBAAcgC,GAA1B,SAA2CH,IAC3C,mBAAG7B,UAAS,mBAAcgC,GAA1B,SAA2CF,IAC3C,mBAAG9B,UAAS,mBAAcgC,GAA1B,SAA2CJ,IAC3C,mBAAG5B,UAAS,mBAAcgC,GAA1B,SAA2CD,WCpBtCG,G,MAAgB,SAACX,GAC5B,MAAO,CACLlC,KAAM,cACNC,QAASiC,KCwGEY,EArGI,WACjB,IAAIZ,EAAU9B,aAAY,SAACC,GAAD,OAAWA,EAAM6B,WAErCC,EAA4CD,EAA5CC,MAAOC,EAAqCF,EAArCE,MAAOlB,EAA8BgB,EAA9BhB,MAAOoB,EAAuBJ,EAAvBI,MAAOD,EAAgBH,EAAhBG,KAAMhC,EAAU6B,EAAV7B,MAEpCC,EAAUC,cAEVC,EAAWC,cAEf,OACE,mCACE,sBAAKE,UAAU,qBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,MAAd,8BACA,sBAAKW,MAAM,UAAX,UACE,qBAAKA,MAAM,QAAX,SACE,uBACEtB,KAAK,OACLsB,MAAM,eACNyB,YAAY,aACZvB,MAAOW,EACPV,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAEV,MAAOT,EAAEC,cAAcH,cAItD,qBAAKF,MAAM,QAAX,SACE,uBACEE,MAAOY,EACPX,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAET,MAAOV,EAAEC,cAAcH,UAElDxB,KAAK,OACLsB,MAAM,eACNyB,YAAY,gBAIhB,qBAAKzB,MAAM,QAAX,SACE,uBACEE,MAAON,EACPO,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAE3B,MAAOQ,EAAEC,cAAcH,UAElDxB,KAAK,QACLsB,MAAM,eACNyB,YAAY,YAGhB,qBAAKzB,MAAM,QAAX,SACE,uBACEE,MAAOc,EACPb,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAEP,MAAOZ,EAAEC,cAAcH,UAElDxB,KAAK,SACLsB,MAAM,eACNyB,YAAY,YAIhB,qBAAKzB,MAAM,QAAX,SACE,uBACEE,MAAOa,EACPZ,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAER,KAAMX,EAAEC,cAAcH,UAEjDxB,KAAK,OACLsB,MAAM,eACNyB,YAAY,WAIhB,qBAAKzB,MAAM,QAAX,SACE,uBACEE,MAAOnB,EACPoB,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAExC,MAAOqB,EAAEC,cAAcH,UAElDxB,KAAK,OACLsB,MAAM,eACNyB,YAAY,eAKlB,wBACEnC,QAAS,WACPN,EAAQO,KAAK,oBAEfF,UAAU,sBAJZ,qBASF,cAAC,EAAD,UChEOqC,EA/BK,WAClB,IAAMC,EAAQC,cAARD,IAEN,EAAoChC,mBAAS,MAA7C,mBAAKkC,EAAL,KAAkBC,EAAlB,KAaA,OAXAC,qBAAU,WACRxD,EACGyD,WAAW,UACXC,IAAIN,GACJO,MACAC,MAAK,SAACF,GACL,IAAIG,EAAOH,EAAIG,OACfN,EAAeM,QAElB,IAGD,mCACGP,GAAeA,EAAYjB,QAAQyB,SAClC,mCACE,mBAAGhD,UAAS,mBAAcwC,EAAYpD,MAAtC,SACGoD,EAAYjB,QAAQC,UAIzB,iCC2FOyB,EAnHM,WACnB,IAAItD,EAAUC,cACVC,EAAWC,cAEf,EAAgDL,aAC9C,SAACC,GAAD,OAAWA,EAAM6B,WADbO,EAAN,EAAMA,OAAQF,EAAd,EAAcA,KAAMG,EAApB,EAAoBA,KAAMF,EAA1B,EAA0BA,QAASmB,EAAnC,EAAmCA,SAI7B/B,EAAOxB,aAAY,SAACC,GAAD,OAAWA,EAAMwD,aAApCjC,GAEFM,EAAU9B,aAAY,SAACC,GAAD,OAAWA,EAAM6B,WACvCnC,EAAOK,aAAY,SAACC,GAAD,OAAWA,EAAMuC,YAClCkB,EAAQ1D,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAArC2D,IAEN,OACE,qCACE,sBAAKnD,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,MAAd,kCACA,sBAAKW,MAAM,UAAX,UACE,qBAAKA,MAAM,QAAX,SACE,uBACEtB,KAAK,OACLsB,MAAM,eACNyB,YAAY,SACZvB,MAAOiB,EACPhB,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAEJ,OAAQf,EAAEC,cAAcH,cAIvD,qBAAKF,MAAM,QAAX,SACE,uBACEE,MAAOgB,EACPf,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAEL,QAASd,EAAEC,cAAcH,UAEpDxB,KAAK,OACLsB,MAAM,eACNyB,YAAY,cAIhB,qBAAKzB,MAAM,QAAX,SACE,uBACEE,MAAOe,EACPd,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAEN,KAAMb,EAAEC,cAAcH,UAEjDxB,KAAK,SACLsB,MAAM,eACNyB,YAAY,WAGhB,qBAAKzB,MAAM,QAAX,SACE,uBACEE,MAAOkB,EACPjB,SAAU,SAACC,GACTlB,EAASqC,EAAc,CAAEH,KAAMhB,EAAEC,cAAcH,UAEjDxB,KAAK,SACLsB,MAAM,eACNyB,YAAY,mBAIhB,sBAAKzB,MAAM,iBAAX,UACE,uBACEA,MAAM,mBACNtB,KAAK,WACL+D,QAASJ,EACT/C,QAAS,SAACc,GACRlB,EACEqC,EAAc,CAAEc,SAAUjC,EAAEC,cAAcoC,YAG9CnC,GAAG,qBAEL,uBAAON,MAAM,mBAAmBC,IAAI,mBAApC,+BAMJ,wBACEX,QAAS,WACPN,EAAQO,KAAK,cAEfF,UAAU,sBAJZ,qBASF,cAAC,EAAD,OAEF,wBACEC,QAAS,WACPoD,MAAM,gCAAD,OAAiCpC,KAExCjB,UAAU,2BAJZ,2BAQA,wBACEC,QAAS,WACPJ,EC1FgB,SAACsD,EAAK5B,EAASnC,GACvC,OAAO,SAACS,GACNA,EArBK,CACLR,KAAM,gBAsBNH,EACGyD,WAAW,UACXW,IAAI,CACHH,MACA5B,UACAnC,SAED0D,MAAK,SAACS,GACL,OAAOA,EAAOV,SAEfC,MAAK,SAACF,GACL/C,EArBC,CACLR,KAAM,iBACNC,QAmBkCsD,EAAI3B,QAEnCuC,OAAM,SAACC,GACN5D,EAhCsB,SAAC4D,GAC7B,MAAO,CACLpE,KAAM,WACNC,QAASmE,GA6BIC,CAAeD,QDwEbE,CAAWR,EAAK5B,EAASnC,KAEpCY,UAAU,4BAJZ,kCElBS4D,EAvFF,WACX,IAAIjE,EAAUC,cACd,EAA8BU,mBAAS,IAAvC,mBAAKG,EAAL,KAAeC,EAAf,KACA,EAA4CJ,mBAAS,IAArD,mBAAKuD,EAAL,KAAsBC,EAAtB,KACA,EAAwBxD,mBAAS,IAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACIhB,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAExC,OACE,qCACGA,EAAO,cAAC,IAAD,CAAUO,GAAG,UAAa,GAElC,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,YAAd,sBACA,uBAAMA,UAAU,OAAhB,UACE,sBAAKW,MAAM,OAAX,UACE,uBAAOC,IAAI,qBAAqBD,MAAM,aAAtC,2BAGA,uBACEtB,KAAK,QACLsB,MAAM,eACNE,MAAON,EACPO,SAAU,SAACC,GACTP,EAASO,EAAEC,cAAcH,QAE3BI,GAAG,0BAGP,sBAAKN,MAAM,OAAX,UACE,uBAAOC,IAAI,wBAAwBD,MAAM,aAAzC,sBAGA,uBACEtB,KAAK,WACLwB,MAAOJ,EACPK,SAAU,SAACC,GACTL,EAAYK,EAAEC,cAAcH,QAE9BF,MAAM,eACNM,GAAG,6BAIP,sBAAKN,MAAM,OAAX,UACE,uBAAOC,IAAI,wBAAwBD,MAAM,aAAzC,8BAGA,uBACEtB,KAAK,WACLwB,MAAOgD,EACP/C,SAAU,SAACC,GACT+C,EAAmB/C,EAAEC,cAAcH,QAErCF,MAAM,eACNM,GAAG,6BAIP,wBACEhB,QAAS,SAACc,GACRA,EAAEG,iBACET,IAAaoD,GACf5E,EAAK8E,+BAA+BxD,EAAOE,IAG/CE,MAAM,kBAPR,qBAWA,uBACA,uBACA,wBACEV,QAAS,WACPN,EAAQO,KAAK,WAEfS,MAAM,kBAJR,+BC5ECqD,EAAc,SAACxE,GAC1B,MAAO,CACLH,KAAM,WACNC,QAASE,ICoEEyE,EA1DL,WACR,IAAIpE,EAAWC,cA4Bf,OA1BA4C,qBAAU,WAER,IAAIwB,EAAQjF,EAAKkF,mBAAL,+BAAAC,EAAA,MAAwB,WAAO5E,GAAP,mBAAA4E,EAAA,yDAGlCvE,EAASmE,EAAYxE,KACjBA,EAJ8B,uBAK1B2D,EAAe3D,EAAf2D,IAAK5C,EAAUf,EAAVe,MACPgD,EAASrE,EAAUyD,WAAW,SAASC,IAAIO,GANf,SAQhBI,EAAOV,MARS,cAUvBwB,QACPd,EAAOe,IAAI,CACT/D,UAZ4B,2CAAxB,uDAkBZ,OAAO,WAEL2D,OAED,IAGD,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,sBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,eCvDGC,EATO,WAA2B,IAA1B9E,EAAyB,uDAAjB,KAAM+E,EAAW,uCAC9C,OAAQA,EAAOpF,MACb,IAAK,eACH,OAAOoF,EAAOnF,QAChB,QACE,OAAOI,ICMEgF,EATG,WAA2B,IAA1BhF,EAAyB,uDAAjB,KAAM+E,EAAW,uCAC1C,OAAQA,EAAOpF,MACb,IAAK,WACH,OAAOoF,EAAOnF,QAChB,QACE,OAAOI,I,QCPTiF,EAAe,CACjBnD,MAAO,GACPC,MAAO,GACPlB,MAAO,GACPoB,MAAO,GACPD,KAAM,GACNhC,MAAO,GACPoC,OAAQ,GACRD,QAAS,GACTD,KAAM,GACNG,KAAM,GACNiB,UAAU,GAaG4B,EAVM,WAAmC,IAAlClF,EAAiC,uDAAzBiF,EAAcF,EAAW,uCACrD,OAAQA,EAAOpF,MACb,IAAK,cACH,OAAO,2BAAKK,GAAU+E,EAAOnF,SAE/B,QACE,OAAOI,ICpBTiF,EAAe,CACjBE,QAAS,KACTpB,IAAK,KACLxC,GAAI,ICYS6D,EAPGC,YAAgB,CAChC9C,SAAUuC,EACVhF,KAAMkF,EACNnD,QAASqD,EACT1B,UDNyB,WAAmC,IAAlCxD,EAAiC,uDAAzBiF,EAAcF,EAAW,uCAC3D,OAAQA,EAAOpF,MACb,IAAK,cACH,OAAO,2BAAKK,GAAZ,IAAmBmF,SAAS,IAE9B,IAAK,WACH,OAAO,2BACFnF,GADL,IAEEmF,SAAS,EACTpB,IAAKgB,EAAOnF,UAGhB,IAAK,iBACH,OAAO,2BACFI,GADL,IAEEmF,SAAS,EACT5D,GAAIwD,EAAOnF,UAGf,QACE,OAAOI,M,QElBTsF,EAAUC,YAAYH,EAAaI,YAAgBC,MAEvDC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAON,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.f8ef5a6e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBB2qy41oy_JrFMh9tnoYhdShcUMW_FoOE\",\n  authDomain: \"resume-builder-3a99c.firebaseapp.com\",\n  projectId: \"resume-builder-3a99c\",\n  storageBucket: \"resume-builder-3a99c.appspot.com\",\n  messagingSenderId: \"423119986188\",\n  appId: \"1:423119986188:web:1b7e8a1a00f91a344bd829\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","export const templateCreator = (code) => {\n  return {\n    type: \"SET_TEMPLATE\",\n    payload: code,\n  };\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { auth } from \"../firebase\";\nimport { templateCreator } from \"../redux/actions/templateActions\";\nimport \"./css/home.css\";\n\nlet Home = () => {\n  let user = useSelector((state) => state.user);\n  let history = useHistory();\n  let dispatch = useDispatch();\n  return (\n    <>\n      {user ? \"\" : <Redirect to=\"/login\" />}\n\n      <div className=\"template-container\">\n        <div\n          onClick={() => {\n            dispatch(templateCreator(\"A\"));\n            history.push(\"/personal\");\n          }}\n          className=\"template\"\n        >\n          <img src=\"http://localhost:3000/skin1.svg\" />\n        </div>\n        <div\n          onClick={() => {\n            dispatch(templateCreator(\"B\"));\n            history.push(\"/personal\");\n          }}\n          className=\"template\"\n        >\n          <img src=\"http://localhost:3000/skin2.svg\" />\n        </div>\n      </div>\n\n      <button\n        className=\"btn-primary home-logout-btn\"\n        onClick={() => {\n          // when logou onauthstate change dispatch a action, causes state change in redux, cuurent comp re-render, user set to null , redirect to login\n          auth.signOut();\n        }}\n      >\n        Logout\n      </button>\n    </>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { auth } from \"../firebase\";\n\nlet Login = () => {\n  let history = useHistory();\n  let user = useSelector((state) => state.user);\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n\n  return (\n    <>\n    // when we press the login button onAuthStateChanged change the state , the comp re-render, when re-render user is not null than it redirect to home\n      {user ? <Redirect to=\"/home\" /> : \"\"}\n      <div className=\"row\">\n        <div className=\"col-4 offset-4\">\n          <h1 className=\"mt-4 mb-4\">Login</h1>\n          <form className=\"mt-4\">\n            <div class=\"mb-3\">\n              <label for=\"exampleInputEmail1\" class=\"form-label\">\n                Email address\n              </label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.currentTarget.value);\n                }}\n                class=\"form-control\"\n                id=\"exampleInputEmail1\"\n              />\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"exampleInputPassword1\" class=\"form-label\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.currentTarget.value);\n                }}\n                id=\"exampleInputPassword1\"\n              />\n            </div>\n\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                auth.signInWithEmailAndPassword(email, password);\n              }}\n              class=\"btn btn-primary\"\n            >\n              Login\n            </button>\n            <br />\n            <br />\n            <button\n              onClick={() => {\n                history.push(\"/signup\");\n              }}\n              class=\"btn btn-primary\"\n            >\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import { Link } from \"react-router-dom\";\n\nlet Navbar = () => {\n  return (\n    <>\n      <nav class=\"navbar navbar-dark bg-dark\">\n        <div class=\"container-fluid\">\n          <Link class=\"navbar-brand\" to=\"/\">\n            Resume Builder\n          </Link>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import { useSelector } from \"react-redux\";\nimport \"./css/preview.css\";\n\nlet Preview = (props) => {\n  let { fname, lname, city, state, email, phone, cgpa, college, degree, year } =\n    useSelector((state) => state.details);\n\n  let templateCode = useSelector((state) => state.template);\n  return (\n    <>\n      <div className=\"preview-container\">\n        <p className={`template-${templateCode}`}>{fname}</p>\n        <p className={`template-${templateCode}`}>{lname}</p>\n        <p className={`template-${templateCode}`}>{email}</p>\n        <p className={`template-${templateCode}`}>{phone}</p>\n        <p className={`template-${templateCode}`}>{city}</p>\n        <p className={`template-${templateCode}`}>{state}</p>\n        <p className={`template-${templateCode}`}>{college}</p>\n        <p className={`template-${templateCode}`}>{degree}</p>\n        <p className={`template-${templateCode}`}>{cgpa}</p>\n        <p className={`template-${templateCode}`}>{year}</p>\n      </div>\n    </>\n  );\n};\n\nexport default Preview;\n","export const detailCreator = (details) => {\n  return {\n    type: \"SET_DETAILS\",\n    payload: details,\n  };\n};\n","import Preview from \"./preview\";\nimport \"./css/form.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { detailCreator } from \"../redux/actions/detailsActions\";\nimport { useHistory } from \"react-router-dom\";\n\nlet PersonalData = () => {\n  let details = useSelector((state) => state.details);\n\n  let { fname, lname, email, phone, city, state } = details;\n\n  let history = useHistory();\n\n  let dispatch = useDispatch();\n\n  return (\n    <>\n      <div className=\"personal-container\">\n        <div className=\"personal-form\">\n          <h2 className=\"m-4\">Personal Details</h2>\n          <div class=\"row m-3\">\n            <div class=\"col-5\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"First name\"\n                value={fname}\n                onChange={(e) => {\n                  dispatch(detailCreator({ fname: e.currentTarget.value }));\n                }}\n              />\n            </div>\n            <div class=\"col-5\">\n              <input\n                value={lname}\n                onChange={(e) => {\n                  dispatch(detailCreator({ lname: e.currentTarget.value }));\n                }}\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Last name\"\n              />\n            </div>\n\n            <div class=\"col-5\">\n              <input\n                value={email}\n                onChange={(e) => {\n                  dispatch(detailCreator({ email: e.currentTarget.value }));\n                }}\n                type=\"email\"\n                class=\"form-control\"\n                placeholder=\"Email\"\n              />\n            </div>\n            <div class=\"col-5\">\n              <input\n                value={phone}\n                onChange={(e) => {\n                  dispatch(detailCreator({ phone: e.currentTarget.value }));\n                }}\n                type=\"number\"\n                class=\"form-control\"\n                placeholder=\"Phone\"\n              />\n            </div>\n\n            <div class=\"col-5\">\n              <input\n                value={city}\n                onChange={(e) => {\n                  dispatch(detailCreator({ city: e.currentTarget.value }));\n                }}\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"City\"\n              />\n            </div>\n\n            <div class=\"col-5\">\n              <input\n                value={state}\n                onChange={(e) => {\n                  dispatch(detailCreator({ state: e.currentTarget.value }));\n                }}\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"State\"\n              />\n            </div>\n          </div>\n\n          <button\n            onClick={() => {\n              history.push(\"/qualifications\");\n            }}\n            className=\"btn btn-primary m-4\"\n          >\n            Next\n          </button>\n        </div>\n        <Preview />\n      </div>\n    </>\n  );\n};\n\nexport default PersonalData;\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore } from \"../firebase\";\nimport \"./css/preview.css\";\n\nlet PublicPreview = () => {\n  let { rid } = useParams();\n\n  let [previewData, setPreviewData] = useState(null);\n\n  useEffect(() => {\n    firestore\n      .collection(\"resume\")\n      .doc(rid)\n      .get()\n      .then((doc) => {\n        let data = doc.data();\n        setPreviewData(data);\n      });\n  }, []);\n\n  return (\n    <>\n      {previewData && previewData.details.isPublic ? (\n        <>\n          <p className={`template-${previewData.code}`}>\n            {previewData.details.fname}\n          </p>\n        </>\n      ) : (\n        \"Not available or not public\"\n      )}\n    </>\n  );\n};\n\nexport default PublicPreview;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport Preview from \"./preview\";\nimport \"./css/form.css\";\n\nimport { detailCreator } from \"../redux/actions/detailsActions\";\nimport { saveResume } from \"../redux/actions/saveActions\";\nimport { useHistory } from \"react-router\";\nlet Qualifications = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  let { degree, cgpa, year, college, isPublic } = useSelector(\n    (state) => state.details\n  );\n\n  let { id } = useSelector((state) => state.saveState);\n\n  let details = useSelector((state) => state.details);\n  let code = useSelector((state) => state.template);\n  let { uid } = useSelector((state) => state.user);\n\n  return (\n    <>\n      <div className=\"qual-container\">\n        <div className=\"qual-form\">\n          <h2 className=\"m-4\">Professional Details</h2>\n          <div class=\"row m-3\">\n            <div class=\"col-5\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Degree\"\n                value={degree}\n                onChange={(e) => {\n                  dispatch(detailCreator({ degree: e.currentTarget.value }));\n                }}\n              />\n            </div>\n            <div class=\"col-5\">\n              <input\n                value={college}\n                onChange={(e) => {\n                  dispatch(detailCreator({ college: e.currentTarget.value }));\n                }}\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"College\"\n              />\n            </div>\n\n            <div class=\"col-5\">\n              <input\n                value={cgpa}\n                onChange={(e) => {\n                  dispatch(detailCreator({ cgpa: e.currentTarget.value }));\n                }}\n                type=\"number\"\n                class=\"form-control\"\n                placeholder=\"CGPA\"\n              />\n            </div>\n            <div class=\"col-5\">\n              <input\n                value={year}\n                onChange={(e) => {\n                  dispatch(detailCreator({ year: e.currentTarget.value }));\n                }}\n                type=\"number\"\n                class=\"form-control\"\n                placeholder=\"Year of grad\"\n              />\n            </div>\n\n            <div class=\"form-check m-4\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                checked={isPublic}\n                onClick={(e) => {\n                  dispatch(\n                    detailCreator({ isPublic: e.currentTarget.checked })\n                  );\n                }}\n                id=\"flexCheckDefault\"\n              />\n              <label class=\"form-check-label\" for=\"flexCheckDefault\">\n                Make public\n              </label>\n            </div>\n          </div>\n\n          <button\n            onClick={() => {\n              history.push(\"/personal\");\n            }}\n            className=\"btn btn-primary m-4\"\n          >\n            Back\n          </button>\n        </div>\n        <Preview />\n      </div>\n      <button\n        onClick={() => {\n          alert(`localhost:3000/publicpreview/${id}`);\n        }}\n        className=\"btn btn-primary qual-gen\"\n      >\n        Generate link\n      </button>\n      <button\n        onClick={() => {\n          dispatch(saveResume(uid, details, code));\n        }}\n        className=\"btn btn-primary qual-save\"\n      >\n        Save to Database\n      </button>\n    </>\n  );\n};\n\nexport default Qualifications;\n","import { firestore } from \"../../firebase\";\n\nexport const saveResumeCreator = () => {\n  return {\n    type: \"SAVE_RESUME\",\n  };\n};\n\nexport const saveErrCreator = (err) => {\n  return {\n    type: \"SAVE_ERR\",\n    payload: err,\n  };\n};\n\nexport const saveCompletedCreator = (id) => {\n  return {\n    type: \"SAVE_COMPLETED\",\n    payload: id,\n  };\n};\n\nexport const saveResume = (uid, details, code) => {\n  return (dispatch) => {\n    dispatch(saveResumeCreator());\n\n    firestore\n      .collection(\"resume\")\n      .add({\n        uid,\n        details,\n        code,\n      })\n      .then((docRef) => {\n        return docRef.get();\n      })\n      .then((doc) => {\n        dispatch(saveCompletedCreator(doc.id));\n      })\n      .catch((err) => {\n        dispatch(saveErrCreator(err));\n      });\n  };\n};\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { auth } from \"../firebase\";\n\nlet SignUp = () => {\n  let history = useHistory();\n  let [password, setPassword] = useState(\"\");\n  let [confirmPassword, setConfirmPassword] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let user = useSelector((state) => state.user);\n\n  return (\n    <>\n      {user ? <Redirect to=\"/home\" /> : \"\"}\n\n      <div className=\"row\">\n        <div className=\"col-4 offset-4\">\n          <h1 className=\"mt-4 mb-4\">Sign Up!</h1>\n          <form className=\"mt-4\">\n            <div class=\"mb-3\">\n              <label for=\"exampleInputEmail1\" class=\"form-label\">\n                Email address\n              </label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.currentTarget.value);\n                }}\n                id=\"exampleInputEmail1\"\n              />\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"exampleInputPassword1\" class=\"form-label\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.currentTarget.value);\n                }}\n                class=\"form-control\"\n                id=\"exampleInputPassword1\"\n              />\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"exampleInputPassword2\" class=\"form-label\">\n                Confirm Password\n              </label>\n              <input\n                type=\"password\"\n                value={confirmPassword}\n                onChange={(e) => {\n                  setConfirmPassword(e.currentTarget.value);\n                }}\n                class=\"form-control\"\n                id=\"exampleInputPassword2\"\n              />\n            </div>\n\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                if (password === confirmPassword) {\n                  auth.createUserWithEmailAndPassword(email, password);\n                }\n              }}\n              class=\"btn btn-primary\"\n            >\n              Sign Up\n            </button>\n            <br />\n            <br />\n            <button\n              onClick={() => {\n                history.push(\"/login\");\n              }}\n              class=\"btn btn-primary\"\n            >\n              Login\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignUp;\n","// payload is whatever we pass to useCreator while dispatching it using dispatcher\nexport const userCreator = (user) => {\n  return {\n    type: \"SET_USER\",\n    payload: user,\n  };\n};\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/home\";\n\nimport Login from \"./components/login\";\nimport Navbar from \"./components/navbar\";\nimport PersonalData from \"./components/personalData\";\nimport PublicPreview from \"./components/publicPreview\";\nimport Qualifications from \"./components/qualifications\";\nimport SignUp from \"./components/signup\";\nimport { auth, firestore } from \"./firebase\";\nimport { userCreator } from \"./redux/actions/userActions\";\n\nlet App = () => {\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n    // when authstatechange there is no role of useEffect in it,,,, it is a event subsribed to events of login and logout... user is remebered\n    let unsub = auth.onAuthStateChanged(async (user) => {\n      // dispatch is sending object to the store not the useCreator function\n      // this will cause the state to change and the component that is currently mounted will re-render\n      dispatch(userCreator(user));\n      if (user) {\n        let { uid, email } = user;\n        let docRef = firestore.collection(\"users\").doc(uid);\n\n        let doc = await docRef.get();\n\n        if (!doc.exists) {\n          docRef.set({\n            email,\n          });\n        }\n      }\n    });\n\n    return () => {\n      // run when we close our website\n      unsub();\n    };\n  }, []);\n\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/publicpreview/:rid\">\n            <PublicPreview />\n          </Route>\n          <Route path=\"/qualifications\">\n            <Qualifications />\n          </Route>\n          <Route path=\"/personal\">\n            <PersonalData />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","let templateReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_TEMPLATE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default templateReducer;\n","// action get its value from store , store get its value from dispatch, we give object to dispatch\n// intially state is null\nlet userReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return action.payload; // set state to action.payload\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","let initialState = {\n  fname: \"\",\n  lname: \"\",\n  email: \"\",\n  phone: \"\",\n  city: \"\",\n  state: \"\",\n  degree: \"\",\n  college: \"\",\n  cgpa: \"\",\n  year: \"\",\n  isPublic: false,\n};\n\nlet detailsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_DETAILS\":\n      return { ...state, ...action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default detailsReducer;\n","let initialState = {\n  loading: null,\n  err: null,\n  id: \"\",\n};\n\nexport const saveReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SAVE_RESUME\":\n      return { ...state, loading: true };\n\n    case \"SAVE_ERR\":\n      return {\n        ...state,\n        loading: false,\n        err: action.payload,\n      };\n\n    case \"SAVE_COMPLETED\":\n      return {\n        ...state,\n        loading: false,\n        id: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport templateReducer from \"./reducers/templateReducer\";\nimport userReducer from \"./reducers/userReducer\";\nimport detailsReducer from \"./reducers/detailsReducer\";\nimport { saveReducer } from \"./reducers/saveReducer\";\n\n// root reducer has combined the switch statements in the reducers\n\nlet rootReducer = combineReducers({\n  template: templateReducer,\n  user: userReducer,\n  details: detailsReducer,\n  saveState: saveReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport App from \"./App\";\nimport rootReducer from \"./redux/rootReducer\";\nimport thunk from \"redux-thunk\";\n// every reducer correspond to a state\nlet myStore = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={myStore}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}